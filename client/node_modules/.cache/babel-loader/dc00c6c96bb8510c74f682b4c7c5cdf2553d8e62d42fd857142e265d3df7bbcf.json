{"ast":null,"code":"var _jsxFileName = \"/Users/watanabesodai/me/anki/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport WordInput from \"./components/WordInput\";\nimport DefinitionDisplay from \"./components/DefinitionDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [definition, setDefinition] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const port = import.meta.resolve;\n  console.log(port);\n  const handleWordChange = newWord => {\n    setWord(newWord);\n  };\n  const handleGenerate = async () => {\n    if (!word) {\n      setError(\"単語を入力してください\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(`http://localhost:${port}/generate`, {\n        word\n      });\n      setDefinition(response.data.definition);\n    } catch (err) {\n      setError(\"APIエラーが発生しました!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddToAnki = async () => {\n    console.log(\"Ankiに追加:\", word, definition);\n    try {\n      const response = await axios.post(`http://localhost:${port}/add`, {\n        word,\n        definition\n      });\n      alert('Ankiに追加されました！');\n    } catch (error) {\n      console.error('Anki追加エラー:', error);\n      alert('Ankiへの追加に失敗しました。');\n    }\n  };\n  const handleCancel = () => {\n    setDefinition(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meaning Generater\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n      word: word,\n      onWordChange: handleWordChange,\n      onGenerate: handleGenerate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"generating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), definition && /*#__PURE__*/_jsxDEV(DefinitionDisplay, {\n      definition: definition,\n      onAdd: handleAddToAnki,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xpcAPmelQBJw4Tso7/ji77bzfmU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","WordInput","DefinitionDisplay","jsxDEV","_jsxDEV","App","_s","word","setWord","definition","setDefinition","loading","setLoading","error","setError","port","import","meta","resolve","console","log","handleWordChange","newWord","handleGenerate","response","post","data","err","handleAddToAnki","alert","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","onWordChange","onGenerate","style","color","onAdd","onCancel","_c","$RefreshReg$"],"sources":["/Users/watanabesodai/me/anki/client/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport WordInput from \"./components/WordInput\";\nimport DefinitionDisplay from \"./components/DefinitionDisplay\";\nimport { log } from \"console\";\n\nconst App: React.FC = () => {\n  const [word, setWord] = useState(\"\");\n  const [definition, setDefinition] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const port = import.meta.resolve;\n\n  console.log(port);\n  \n  const handleWordChange = (newWord: string) => {\n    setWord(newWord);\n  };\n\n  const handleGenerate = async () => {\n    if (!word) {\n      setError(\"単語を入力してください\");\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(`http://localhost:${port}/generate`, { word });\n      setDefinition(response.data.definition);\n    } catch (err) {\n      setError(\"APIエラーが発生しました!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddToAnki = async () => {\n    console.log(\"Ankiに追加:\", word, definition);\n    \n    try {\n      const response = await axios.post(`http://localhost:${port}/add`, {\n        word,\n        definition,\n      });\n      alert('Ankiに追加されました！');\n    } catch (error) {\n      console.error('Anki追加エラー:', error);\n      alert('Ankiへの追加に失敗しました。');\n    }\n  };\n  \n  const handleCancel = () => {\n    setDefinition(\"\");\n  };\n  \n  return (\n    <div>\n      <h1>Meaning Generater</h1>\n      <WordInput\n        word={word}\n        onWordChange={handleWordChange}\n        onGenerate={handleGenerate}\n      />\n      {loading && <p>generating...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {definition && \n        <DefinitionDisplay \n          definition={definition} \n          onAdd={handleAddToAnki}\n          onCancel={handleCancel}\n        />\n      }\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}