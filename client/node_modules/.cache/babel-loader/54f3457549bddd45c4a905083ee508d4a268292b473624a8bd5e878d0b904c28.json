{"ast":null,"code":"import React,{useState}from\"react\";import axios from'axios';import WordInput from\"./components/WordInput\";import DefinitionDisplay from\"./components/DefinitionDisplay\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[word,setWord]=useState(\"\");const[definition,setDefinition]=useState(\"\");const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");// const port = import.meta.env.;\n// console.log(port);\nconst handleWordChange=newWord=>{setWord(newWord);};const handleGenerate=async()=>{if(!word){setError(\"単語を入力してください\");return;}setLoading(true);setError(\"\");try{const response=await axios.post(\"http://localhost:\".concat(port,\"/generate\"),{word});setDefinition(response.data.definition);}catch(err){setError(\"APIエラーが発生しました!\");}finally{setLoading(false);}};const handleAddToAnki=async()=>{console.log(\"Ankiに追加:\",word,definition);try{const response=await axios.post(\"http://localhost:\".concat(port,\"/add\"),{word,definition});alert('Ankiに追加されました！');}catch(error){console.error('Anki追加エラー:',error);alert('Ankiへの追加に失敗しました。');}};const handleCancel=()=>{setDefinition(\"\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Meaning Generater\"}),/*#__PURE__*/_jsx(WordInput,{word:word,onWordChange:handleWordChange,onGenerate:handleGenerate}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"generating...\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),definition&&/*#__PURE__*/_jsx(DefinitionDisplay,{definition:definition,onAdd:handleAddToAnki,onCancel:handleCancel})]});};export default App;","map":{"version":3,"names":["React","useState","axios","WordInput","DefinitionDisplay","jsx","_jsx","jsxs","_jsxs","App","word","setWord","definition","setDefinition","loading","setLoading","error","setError","handleWordChange","newWord","handleGenerate","response","post","concat","port","data","err","handleAddToAnki","console","log","alert","handleCancel","children","onWordChange","onGenerate","style","color","onAdd","onCancel"],"sources":["/Users/watanabesodai/me/anki/client/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport WordInput from \"./components/WordInput\";\nimport DefinitionDisplay from \"./components/DefinitionDisplay\";\nimport { log } from \"console\";\n\nconst App: React.FC = () => {\n  const [word, setWord] = useState(\"\");\n  const [definition, setDefinition] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  // const port = import.meta.env.;\n\n  // console.log(port);\n  \n  const handleWordChange = (newWord: string) => {\n    setWord(newWord);\n  };\n\n  const handleGenerate = async () => {\n    if (!word) {\n      setError(\"単語を入力してください\");\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(`http://localhost:${port}/generate`, { word });\n      setDefinition(response.data.definition);\n    } catch (err) {\n      setError(\"APIエラーが発生しました!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddToAnki = async () => {\n    console.log(\"Ankiに追加:\", word, definition);\n    \n    try {\n      const response = await axios.post(`http://localhost:${port}/add`, {\n        word,\n        definition,\n      });\n      alert('Ankiに追加されました！');\n    } catch (error) {\n      console.error('Anki追加エラー:', error);\n      alert('Ankiへの追加に失敗しました。');\n    }\n  };\n  \n  const handleCancel = () => {\n    setDefinition(\"\");\n  };\n  \n  return (\n    <div>\n      <h1>Meaning Generater</h1>\n      <WordInput\n        word={word}\n        onWordChange={handleWordChange}\n        onGenerate={handleGenerate}\n      />\n      {loading && <p>generating...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {definition && \n        <DefinitionDisplay \n          definition={definition} \n          onAdd={handleAddToAnki}\n          onCancel={handleCancel}\n        />\n      }\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,iBAAiB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG/D,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACW,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtC;AAEA;AAEA,KAAM,CAAAiB,gBAAgB,CAAIC,OAAe,EAAK,CAC5CR,OAAO,CAACQ,OAAO,CAAC,CAClB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CAACV,IAAI,CAAE,CACTO,QAAQ,CAAC,aAAa,CAAC,CACvB,OACF,CAEAF,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,IAAI,qBAAAC,MAAA,CAAqBC,IAAI,cAAa,CAAEd,IAAK,CAAC,CAAC,CAChFG,aAAa,CAACQ,QAAQ,CAACI,IAAI,CAACb,UAAU,CAAC,CACzC,CAAE,MAAOc,GAAG,CAAE,CACZT,QAAQ,CAAC,gBAAgB,CAAC,CAC5B,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAY,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEnB,IAAI,CAAEE,UAAU,CAAC,CAEzC,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,IAAI,qBAAAC,MAAA,CAAqBC,IAAI,SAAQ,CAChEd,IAAI,CACJE,UACF,CAAC,CAAC,CACFkB,KAAK,CAAC,eAAe,CAAC,CACxB,CAAE,MAAOd,KAAK,CAAE,CACdY,OAAO,CAACZ,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClCc,KAAK,CAAC,kBAAkB,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBlB,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CAED,mBACEL,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1B1B,IAAA,CAACH,SAAS,EACRO,IAAI,CAAEA,IAAK,CACXuB,YAAY,CAAEf,gBAAiB,CAC/BgB,UAAU,CAAEd,cAAe,CAC5B,CAAC,CACDN,OAAO,eAAIR,IAAA,MAAA0B,QAAA,CAAG,eAAa,CAAG,CAAC,CAC/BhB,KAAK,eAAIV,IAAA,MAAG6B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAJ,QAAA,CAAEhB,KAAK,CAAI,CAAC,CAChDJ,UAAU,eACTN,IAAA,CAACF,iBAAiB,EAChBQ,UAAU,CAAEA,UAAW,CACvByB,KAAK,CAAEV,eAAgB,CACvBW,QAAQ,CAAEP,YAAa,CACxB,CAAC,EAED,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}